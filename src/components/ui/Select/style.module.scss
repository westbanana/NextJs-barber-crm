$transition-duration-slow: 0.3s;
$transition-duration-fast: 0.15s;
$transition-timing-linear: linear;
$transition-timing-ease-out: ease-out;


@mixin animation($name, $duration, $timing-function, $fill-mode) {
  animation: $name $duration $timing-function $fill-mode;
}

.disabled {
  pointer-events: none;
  opacity: 0.5;
  cursor: not-allowed;
  .arrow {
    display: none;
  }
}

.employeeCreator {
  position: absolute;
  top: 0;
  left: -200px;
}

.error {
  border-color: red !important;
}
.mainContainer {
  display: flex;
  flex-direction: column;
  flex: 1;
  background-color: var(--bg-color);
  border: 1px var(--border-color) solid;
  border-radius: var(--border-radius);
  padding: 10px 25px 10px 10px;
  min-width: 90px;
  //max-width: 90px;
  cursor: pointer;
  min-height: 46px;
  position: relative;
  &:has(.list:not(.isClosing)) {
    .arrow {
      transform:  translateY(-50%) rotate(180deg);
    }
    .label {
          transform: translateY(-50%) translateX(10px);
          font-size: 12px;
          color: var(--text-color);
          padding: 0 5px;
          opacity: 1;
          background-color: var(--bg-color);
    }
  }
  &:has(.result:not([value=""])) {
    .label {
      transform: translateY(-50%) translateX(10px);
      font-size: 12px;
      padding: 0 5px;
      color: var(--text-color);
      opacity: 1;
      background-color: var(--bg-color);
    }
  }
}
.resultWrapper {
  display: flex;
  cursor: pointer;
  user-select: none;
}

.errorMessageContainer {
  width: 100%;
  background-color: var(--bg-color);
  padding: 5px;
  border: 1px solid red;
  position: absolute;
  border-radius: var(--border-radius);
  bottom: 0;
  left: 0;
  z-index: 999;
  animation: show 0.3s ease-out forwards;
  @keyframes show {
    from {
      transform: translate(0%, 80%);
      opacity: 0;
    }
    to {
      transform: translate(0%, 120%);
      opacity: 1;
    }
  }
}

.result {
  cursor: pointer;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  background-color: transparent;
  border: none;
  outline: none;
  padding: 0;
  color: var(--text-color)
}

.list {
  display: flex;
  flex-direction: column;
  overflow: auto;
  min-width: 90px;
  background-color: var(--bg-color);
  border: 1px var(--border-color) solid;
  border-radius: 0 0 var(--border-radius) var(--border-radius);
  border-top: none;
  padding: 0 10px 10px 0;
  position: absolute;
  top: 40px;
  left: -1px;
  right: -1px;
  z-index: 9;
  @include animation(open-list, $transition-duration-fast, $transition-timing-ease-out, forwards);
}

.item {
  position: relative;
  padding-left: 15px;
  background-color: transparent;
  cursor: pointer;
  &::before {
    content: "";
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: var(--selectItemHover);
    opacity: 0;
    transition: opacity $transition-duration-slow $transition-timing-linear;
  }
  &:hover::before {
    opacity: 1;
    left: 0;
  }
}

.selectedItem {
  position: relative;
  &::after {
    content: "";
    position: absolute;
    left: 5px;
    top: 50%;
    border-radius: 100%;
    height: 5px;
    width: 5px;
    transform: translateY(-50%);
    background-color: var(--bg-color-inverted);
    transition: all var(--transition);
  }
}

.hiddenArrow {
  display: none;
}

.mainContainerDisabled {
  cursor: default;
  .result {
    cursor: default;
  }
}

.isClosing {
  @include animation(close-list, $transition-duration-fast, $transition-timing-linear, forwards);
}

.arrow {
  position: absolute;
  top: 50%;
  right: 0;
  transition: $transition-duration-slow;
  transform: translateY(-50%) rotate(0);
}

@keyframes open-list {
  from {
    max-height: 0;
  }
  to {
    max-height: 100px;
  }
}

@keyframes close-list {
  from {
    max-height: 100px;
  }
  to {
    max-height: 0;
  }
}
